// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: stream.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountConnectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountConnectionRequest) Reset() {
	*x = CountConnectionRequest{}
	mi := &file_stream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountConnectionRequest) ProtoMessage() {}

func (x *CountConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountConnectionRequest.ProtoReflect.Descriptor instead.
func (*CountConnectionRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{0}
}

func (x *CountConnectionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CountConnectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountConnectionResponse) Reset() {
	*x = CountConnectionResponse{}
	mi := &file_stream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountConnectionResponse) ProtoMessage() {}

func (x *CountConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountConnectionResponse.ProtoReflect.Descriptor instead.
func (*CountConnectionResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{1}
}

func (x *CountConnectionResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PushStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        *uint64                `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ClientId      *string                `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushStreamRequest) Reset() {
	*x = PushStreamRequest{}
	mi := &file_stream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushStreamRequest) ProtoMessage() {}

func (x *PushStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushStreamRequest.ProtoReflect.Descriptor instead.
func (*PushStreamRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{2}
}

func (x *PushStreamRequest) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *PushStreamRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *PushStreamRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type PushStreamBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        []uint64               `protobuf:"varint,1,rep,packed,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientId      []string               `protobuf:"bytes,2,rep,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushStreamBatchRequest) Reset() {
	*x = PushStreamBatchRequest{}
	mi := &file_stream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushStreamBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushStreamBatchRequest) ProtoMessage() {}

func (x *PushStreamBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushStreamBatchRequest.ProtoReflect.Descriptor instead.
func (*PushStreamBatchRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{3}
}

func (x *PushStreamBatchRequest) GetUserId() []uint64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *PushStreamBatchRequest) GetClientId() []string {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *PushStreamBatchRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type PushStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAllSuccess  bool                   `protobuf:"varint,1,opt,name=is_all_success,json=isAllSuccess,proto3" json:"is_all_success,omitempty"`
	AffectedCount int64                  `protobuf:"varint,2,opt,name=affected_count,json=affectedCount,proto3" json:"affected_count,omitempty"`
	FailedCount   int64                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	SuccessList   []string               `protobuf:"bytes,4,rep,name=success_list,json=successList,proto3" json:"success_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushStreamResponse) Reset() {
	*x = PushStreamResponse{}
	mi := &file_stream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushStreamResponse) ProtoMessage() {}

func (x *PushStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushStreamResponse.ProtoReflect.Descriptor instead.
func (*PushStreamResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{4}
}

func (x *PushStreamResponse) GetIsAllSuccess() bool {
	if x != nil {
		return x.IsAllSuccess
	}
	return false
}

func (x *PushStreamResponse) GetAffectedCount() int64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

func (x *PushStreamResponse) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *PushStreamResponse) GetSuccessList() []string {
	if x != nil {
		return x.SuccessList
	}
	return nil
}

type StreamEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         string                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	UserId        uint64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientId      string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventRequest) Reset() {
	*x = StreamEventRequest{}
	mi := &file_stream_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventRequest) ProtoMessage() {}

func (x *StreamEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventRequest.ProtoReflect.Descriptor instead.
func (*StreamEventRequest) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{5}
}

func (x *StreamEventRequest) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *StreamEventRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StreamEventRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *StreamEventRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type StreamEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventResponse) Reset() {
	*x = StreamEventResponse{}
	mi := &file_stream_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventResponse) ProtoMessage() {}

func (x *StreamEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventResponse.ProtoReflect.Descriptor instead.
func (*StreamEventResponse) Descriptor() ([]byte, []int) {
	return file_stream_proto_rawDescGZIP(), []int{6}
}

var File_stream_proto protoreflect.FileDescriptor

const file_stream_proto_rawDesc = "" +
	"\n" +
	"\fstream.proto\x12\x05proto\"1\n" +
	"\x16CountConnectionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\"/\n" +
	"\x17CountConnectionResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"\x81\x01\n" +
	"\x11PushStreamRequest\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\x04H\x00R\x06userId\x88\x01\x01\x12 \n" +
	"\tclient_id\x18\x02 \x01(\tH\x01R\bclientId\x88\x01\x01\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04bodyB\n" +
	"\n" +
	"\b_user_idB\f\n" +
	"\n" +
	"_client_id\"b\n" +
	"\x16PushStreamBatchRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x03(\x04R\x06userId\x12\x1b\n" +
	"\tclient_id\x18\x02 \x03(\tR\bclientId\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\"\xa7\x01\n" +
	"\x12PushStreamResponse\x12$\n" +
	"\x0eis_all_success\x18\x01 \x01(\bR\fisAllSuccess\x12%\n" +
	"\x0eaffected_count\x18\x02 \x01(\x03R\raffectedCount\x12!\n" +
	"\ffailed_count\x18\x03 \x01(\x03R\vfailedCount\x12!\n" +
	"\fsuccess_list\x18\x04 \x03(\tR\vsuccessList\"z\n" +
	"\x12StreamEventRequest\x12\x14\n" +
	"\x05event\x18\x01 \x01(\tR\x05event\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x04R\x06userId\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\tR\bclientId\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\"\x15\n" +
	"\x13StreamEventResponse2\xfd\x01\n" +
	"\rStreamService\x12X\n" +
	"\x15CountStreamConnection\x12\x1d.proto.CountConnectionRequest\x1a\x1e.proto.CountConnectionResponse\"\x00\x12C\n" +
	"\n" +
	"PushStream\x12\x18.proto.PushStreamRequest\x1a\x19.proto.PushStreamResponse\"\x00\x12M\n" +
	"\x0fPushStreamBatch\x12\x1d.proto.PushStreamBatchRequest\x1a\x19.proto.PushStreamResponse\"\x00B\tZ\a.;protob\x06proto3"

var (
	file_stream_proto_rawDescOnce sync.Once
	file_stream_proto_rawDescData []byte
)

func file_stream_proto_rawDescGZIP() []byte {
	file_stream_proto_rawDescOnce.Do(func() {
		file_stream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stream_proto_rawDesc), len(file_stream_proto_rawDesc)))
	})
	return file_stream_proto_rawDescData
}

var file_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_stream_proto_goTypes = []any{
	(*CountConnectionRequest)(nil),  // 0: proto.CountConnectionRequest
	(*CountConnectionResponse)(nil), // 1: proto.CountConnectionResponse
	(*PushStreamRequest)(nil),       // 2: proto.PushStreamRequest
	(*PushStreamBatchRequest)(nil),  // 3: proto.PushStreamBatchRequest
	(*PushStreamResponse)(nil),      // 4: proto.PushStreamResponse
	(*StreamEventRequest)(nil),      // 5: proto.StreamEventRequest
	(*StreamEventResponse)(nil),     // 6: proto.StreamEventResponse
}
var file_stream_proto_depIdxs = []int32{
	0, // 0: proto.StreamService.CountStreamConnection:input_type -> proto.CountConnectionRequest
	2, // 1: proto.StreamService.PushStream:input_type -> proto.PushStreamRequest
	3, // 2: proto.StreamService.PushStreamBatch:input_type -> proto.PushStreamBatchRequest
	1, // 3: proto.StreamService.CountStreamConnection:output_type -> proto.CountConnectionResponse
	4, // 4: proto.StreamService.PushStream:output_type -> proto.PushStreamResponse
	4, // 5: proto.StreamService.PushStreamBatch:output_type -> proto.PushStreamResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_stream_proto_init() }
func file_stream_proto_init() {
	if File_stream_proto != nil {
		return
	}
	file_stream_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stream_proto_rawDesc), len(file_stream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stream_proto_goTypes,
		DependencyIndexes: file_stream_proto_depIdxs,
		MessageInfos:      file_stream_proto_msgTypes,
	}.Build()
	File_stream_proto = out.File
	file_stream_proto_goTypes = nil
	file_stream_proto_depIdxs = nil
}
